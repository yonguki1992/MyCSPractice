<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAw
        DgAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABHgEAAR4BAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABeAMAAR4DAAEBAQABCAUAARABDhgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/AQAEFQFDBRUB7gH1
        AQcEFQEHAfUB8QUVAUMEFQEKAgABEAEVAkMBFQIUAUMCFQJDARUCZgEVAUMEDQEKAg4/AAkVARMB9AH1
        AfAEFQHyAvUBEwQVAUMEFQMOAQ8BQwFmAWUBQwEUARMBDwERAUMBFAEVAhQCZgEVAkMCDQEKAw4+AAkV
        AesB9QH/AfUBEwIVAeoB/wL1AfgJFQEAAw4BDQFmAYsCZgESAUMBDwEOAUMBEwESAeoBEgEUAxUCQwEQ
        AQ8CDj4ACRUBkgH1Av8BBwIVAQcC/wH1Ae8JFQEOAgABDgEPAg0BZQZmAUMBEwISARMBFAQVAUMBEQEP
        Ag49AAkVAQcD9QHyAhMB8gH1Af8B9QHuCRUBDgEAAQ4BDQEPAw0BZgGLAeoBiwdmARUEQwIRARACDj0A
        CRUBvAL1AfMBbQIUAW0B8QHzAfUB8wEUBxUBFAMOBRABDQFlAmwFZgESAmYBQwMNARACDwMOPAABbQET
        AhQEFQEUAfMB9QH/AfUB9wLsAfcB8wL1AfMBEgMVAUMBFQIUAeoBEAEOARACQwFmARUBDQEQAmYBEgFs
        AmYBDQEPAWYBbQHqAmYBZQMNAQoDDjwAAv8B8gEHAewBEgIUARMB8wH1Af8B9AQaARsB/wH1AfMBbQMU
        ARMB7AEHAfQB/wEOARABQwJmAUMBFQFmAREBEgGLAWwBEQEPAQ4CEQJmAWwEZgINAWUBDQEKAQ48AAb/
        AQcB6gETAfIB9QMaA5kBmgEaAfUB8wHqARIB7AG8Bf8BDgIRARUBFAFtAXMBdAFSAXoCmgHrAWYBEQFm
        AYsBbAJmARACEQENAWYBiwGKAmUBCjwAB/8B9AFtAe8BGgKZAZMCdAEcAZMBmQEaAfABbQHxB/8CDgEV
        ARIBdAGaA3oDmgGTAWwDZgHrAe0BkwFuAeoBZgEQAQ8BDQJlAa0BDTwACP8B9AEHAZkBkwEcAZMCHAGT
        AhwBkwHuAfQI/wIQAW4BkwaaAhoBkwHsARECEgGTArYDkwGNAWcBjQFnAWUBrQENPAAK/wKTBZkDkwr/
        ARUBEgF0ApkCGgKZAxoCkwHqAusF9wGwAY4DjQGuAWYBQzwACf8B8wOZBJMCmQGTAfMJ/wETAeoBbgEH
        AZkD7gEHAe4BGgHwAvcB7AHqAa4B9wG1Aq8GjQGuAmc8AAn/Ae4BmQGaBpMCmQG8Cf8BFAETAesB7wGT
        AQcB7gEHAe0B7AHvAfEBtQLtARMBjQK1BY0DrgJnAWY8AAf/AfYBGwGZAxoBmgKZAZoCGgKZAfMI/wFD
        ARQB6gHtARwB7wIHAe8B6wHqAbwB7QOuAs8HrgKMA2Y8AAb/AfUBGgGTAZkCGgG9BJMBGgG9ARoBmQGT
        Ab0H/wERARUBEgH4Ae0B7wLuAe8B6wFmAQcBkQSuAc8FrgGMAeoBZgGMAmYBFTwABv8BvQKTARoBmQEH
        AZkBkwEaAZoBkwGZARoCmQGTAZQBvQb/ARABEQFsAesB7QHvArwBBwESAQ8BBwiuAYsBhgHqAWYBEgNm
        ARUBQzwABv8BmgEcAZMBHASZBZMBmQEcAewBmQG9Bv8BEAERARUBEgHsA+8BBwHrARUBBwGuBYsBhgHq
        CGYBQwERPAAG/wHzARMB7AFtAXMB+AHtAZMCbgFzAvgBcwFtAeoB7AH0Bv8BDwEQAREBQwFtAZIB7AFt
        Ae0C9wEHAeoNZgJDAREBEDwABv8B7QIVAeoBbQH4AesBcwKZAXMD6wESARUBEwH0Bv8CDwEQAREBFAFt
        ARUBFAHrAfgB7QG1DWYCQwERARABDzwABv8BFAEVBEMBFQFDARUBFAEVARECQwIRAUMBvAb/AQ4BDwEQ
        AQ8BFAETAhIBbQESAewBrgJmAYYJZgNDARABDwEOPAAF/wHzARUBQwEVAUMBFQJDAhQBFQURAkMB7wb/
        BA4BEQEVARQB6gESAW0B+AVmAWcEZgEVAmYBQwERAQ8BCgIOPAAF/wH0ARQBEQFDAREBQwMVAkMDEQEQ
        AREBFQFDAe4G/wEABA4BEQEVARQBEgHrAeoJZgJDAxEBEAEPAgo9AAb/AewCQwURAUMGEQFDARUB8wb/
        AgABCgEAAQ4BDwFDARUBEwHqAWYCQwdmA0MBDQERAg8BDgEKPQAG/wHyARICQwMRAhABEQEQAxEBQwEV
        AfcH/wQAAQ4BDwIQAUMBFQERAg0BZQRmAUMBZgIRAUMCEAEPAQ4BCj4AB/8B8gFtA0MCEQQQAhEBFAHt
        CP8EAAMKAg8CEAUNAWUBZgFlAWYBQwENAwoBDgEKPwAJ/wEHAesBEwFDAxECQwHqAewB8An/BQABCgEO
        AQoCDgEKBA0BZgJlAg0FCgEOAQo/AAz/AQcB9wHsAgcB8QH0C/8GAAEOAQoBDgIKAQ0BZgENAQoBZQIN
        CApAAB7/BQABCgEAAQoBDwEKAQ8CCgENAQoBDQIKAg0FCkEAHv8HAAEKAQ0FCgENCQpCAAFCAU0BPgcA
        AT4DAAEoAwABeAMAAR4DAAEBAQABAQUAAeABARYAA///AOIACw==
</value>
  </data>
</root>